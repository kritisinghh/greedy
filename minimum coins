// minimum coins
/*
Greedy Algorithm to find Minimum number of Coins

Difficulty Level: Easy | Last Updated: 18 Dec, 2020

Given a value V, if we want to make a change for V Rs, 
and we have an infinite supply of each of the 
denominations in Indian currency, i.e., we have an 
infinite supply of {1, 2, 5, 10, 20, 50, 100, 500, 1000} 
valued coins/notes, what is the minimum number of coins 
and/or notes needed to make the change?

Examples:
Input: V = 70
Output: 2
We need a 50 Rs note and a 20 Rs note.

Input: V = 121
Output: 3
We need a 100 Rs note, a 20 Rs note and a 1 Rs coin.
*/

#include <iostream>
using namespace std;

int findMin(int V){
    vector < int > ans;
    vector<int> coins = {1, 2, 5, 10, 20, 50, 100, 500, 1000};
    int n = coins.size();
    for (int i = n - 1; i >= 0; i--) {
        while (V >= coins[i]) {
        V -= coins[i];
        ans.push_back(coins[i]);
        }
    }
    return ans.size();
}











